class Solution(object):
    def findMedianSortedArrays(self, nums1, nums2):
        # print nums1
        # print nums2
        l1 = len(nums1)
        l2 = len(nums2)
        final_nums = []
        i = 0  # Counter for nums1
        j = 0  # Counter for nums2
        k = 0  # Counter for final_nums

        while i < l1 and j < l2:
            if nums1[i] <= nums2[j]:
                final_nums.append(nums1[i])
                i = i + 1
            else:
                final_nums.append(nums2[j])
                j = j + 1
            k = k + 1

        while i < l1:
            final_nums.append(nums1[i])
            i = i + 1

        while j < l2:
            final_nums.append(nums2[j])
            j = j + 1

        print final_nums

        final_len = len(final_nums)
        if final_len % 2 == 1:
            index = (final_len - 1) / 2
            return final_nums[index]

        else:
            # print 'final_len : ',final_len
            index1 = final_len / 2
            index2 = index1 - 1
            # print 'index1 : ',index1
            # print 'index2 : ',index2
            median = float((float(final_nums[index1]) + float(final_nums[index2])) / 2)
            # print median
            return median

        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: float
        """
